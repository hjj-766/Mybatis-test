<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.mybatis.mapper.DynamicSQLMapper">
    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition1" resultType="Emp">
        select *
        from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age !=''">
                and age = #{age}
            </if>
            <if test="gender != null and age !=''">
                and gender = #{gender}
            </if>
        </where>

    </select>
    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition2" resultType="Emp">
        select *
        from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age !=''">
                 age = #{age} and
            </if>
            <if test="gender != null and age !=''">
                 gender = #{gender} and
            </if>
        </trim>

    </select>
    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition" resultType="Emp">
        select *
        from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age !=''">
                 age = #{age} and
            </if>
            <if test="gender != null and age !=''">
                 gender = #{gender} and
            </if>
        </trim>

    </select>
    <!-- void inserMoreEmp(List<Emp> emps);-->
    <insert id="inserMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>

    <!--void deleteMoreEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmp">
        delete from t_emp where emp_id in(
        <foreach collection="empIds" item="empId" separator=",">
            #{empId}
        </foreach>
        )
    </delete>

    <!--多对一，级联方式查询-->
<!--    <resultMap id="empDeptMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_name" property="dept.deptName"></result>
    </resultMap>
    &lt;!&ndash; Emp getEmpAndDeptByEid(@Param("EmpId") Integer empId);&ndash;&gt;
    <select id="getEmpAndDeptByEid" resultMap="empDeptMap">
        select emp.*,dept.*
        from t_emp emp left join t_dept dept
        on emp.dept_id =dept.dept_id
        where emp.emp_id = #{EmpId}
    </select>-->

    <resultMap id="empDeptMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
    <!--Emp getEmpAndDeptByEid(@Param("EmpId") Integer EmpId);-->
    <select id="getEmpAndDeptByEid" resultMap="empDeptMap">
        select emp.*,dept.* from t_emp emp left join t_dept dept on emp.dept_id =dept.dept_id where emp.emp_id = #{EmpId}
    </select>

    <!--一对多collection-->
    <resultMap id="deptEmpMap" type="Dept">
        <id property="deptId" column="dept_id"></id>
        <result property="deptName" column="dept_name"></result>
        <!--
            collection
            ofType：设置collection标签所处理的集合属性中存储数据的类型
        -->
        <collection property="emps" ofType="Emp">
            <id column="emp_id" property="empId"></id>
            <result column="emp_name" property="empName"></result>
            <result column="age" property="age"></result>
            <result column="gender" property="gender"></result>
        </collection>
    </resultMap>
    <!--Dept getDeptEmpByDid(@Param("deptId") int deptId);-->
    <select id="getDeptEmpByDid" resultMap="deptEmpMap">
        select dept.*,emp.* from t_dept dept left join t_emp emp on dept.dept_id =emp.dept_id where dept.dept_id = #{deptId}
    </select>

        <!--一对多，分步查询-->
    <resultMap id="deptEmpStep" type="Dept">
        <id property="deptId" column="dept_id"></id>
        <result property="deptName" column="dept_name"></result>
        <collection property="emps" select="com.mybatis.mapper.DynamicSQLMapper.getEmpListByDid" column="dept_id">
        </collection>
    </resultMap>
    <!--Dept getDeptByStep(@Param("deptId") Integer deptId);-->
    <select id="getDeptByStep" resultMap="deptEmpStep">
        select * from t_dept where dept_id = #{deptId}
    </select>


    <!--List<Emp> getEmpListByDid(@Param("deptId") Integer deptId);-->
    <select id="getEmpListByDid" resultType="Emp">
        select * from t_emp where dept_id = #{deptId}
    </select>


</mapper>